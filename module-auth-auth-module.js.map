{"version":3,"sources":["./src/app/module/auth/auth-routing.module.ts","./src/app/module/auth/register/register.component.ts","./src/app/module/auth/register/register.component.html","./src/app/module/auth/auth.component.ts","./src/app/module/auth/auth.component.html","./src/app/module/auth/auth.module.ts","./src/app/module/auth/login/login.component.ts","./src/app/module/auth/login/login.component.html","./src/app/module/auth/register/validator/confirmed.validator.ts","./src/app/module/auth/validation/validation.component.ts","./src/app/module/auth/validation/validation.component.html"],"names":[],"mappings":"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","file":"module-auth-auth-module.js","sourcesContent":["import { NgModule } from '@angular/core';\r\nimport { Routes, RouterModule } from '@angular/router';\r\n\r\nimport { Authcomponent } from './auth.component';\r\nimport { LoginComponent } from './login/login.component';\r\nimport { RegisterComponent } from './register/register.component';\r\nimport { ValidationComponent } from './validation/validation.component';\r\n\r\nconst routes: Routes = [\r\n    {\r\n        path: '', component: Authcomponent,\r\n        children: [\r\n            { path: 'login', component: LoginComponent },\r\n            { path: 'register', component: RegisterComponent },\r\n            { path: 'validation', component: ValidationComponent }\r\n        ]\r\n    },\r\n];\r\n\r\n@NgModule({\r\n    imports: [RouterModule.forChild(routes)],\r\n    exports: [RouterModule]\r\n})\r\nexport class AuthRoutingModule { }","import { Component, OnInit, ElementRef, ViewChild } from '@angular/core';\nimport { Router, ActivatedRoute } from '@angular/router';\nimport { trigger, transition, style, animate, state } from '@angular/animations';\nimport { FormBuilder, FormGroup, Validators } from '@angular/forms';\nimport { first } from 'rxjs/operators';\nimport {showModels} from '../../../web-gl/engine/showModel.service';\nimport { createAvatar } from '@dicebear/avatars';\nimport * as styleAvatar from '@dicebear/pixel-art';\n\nimport { MustMatch } from './validator/confirmed.validator';\n\nimport { AccountService, characterService, AlertService, FileUploadService } from '../../../_services';\n\n@Component({\n  selector: 'app-register',\n  templateUrl: './register.component.html',\n  animations: [\n    trigger('slideInOut', [\n      transition(':enter', [\n        style({ transform: 'translateX(100%)' }),\n        animate('.2s', style({ transform: 'translateX(0%)' }))\n      ]),\n      transition(':leave', [\n        style({ transform: 'translateX(0%)' }),\n        animate('.2s', style({ transform: 'translateX(100%)' }))\n      ])\n    ])\n    ]\n})\nexport class RegisterComponent implements OnInit {\n    public imagePath;\n    imgURL: any;\n    public message: string;\n\n    @ViewChild('skinPick', { static: false }) skinPick: ElementRef;\n    form_step1: FormGroup;\n    form_step3: FormGroup;\n    loading = false;\n    submitted = false;\n    account_step = false;\n    personnal_step = false;\n    character_step = false;\n    showProposal = false;\n    step = 1;\n    lastScrollSkin = false;\n    firstScrollSkin = false;\n    skins = [];\n    skinsReal = null;\n    skinModel = 'andre';\n    svgAvatar: any;\n    file = null;\n\n    constructor(\n        private formBuilder: FormBuilder,\n        private route: ActivatedRoute,\n        private router: Router,\n        private accountService: AccountService,\n        private characterService: characterService,\n        private alertService: AlertService,\n        private showModel: showModels,\n        private FileUploadService: FileUploadService\n    ) { }\n\n    ngOnInit() {\n        this.form_step1 = this.formBuilder.group({\n            username: ['', Validators.required],\n            email: ['', [Validators.required, Validators.email]],\n            password: ['', [Validators.required, Validators.minLength(6)]],\n            passwordConfirm: ['', [Validators.required, Validators.minLength(6)]],\n            avatar: [''],\n            day: [''],\n            month: [''],\n            year: [''],\n            signature: ['']\n        },\n            { \n                validator: MustMatch('password', 'passwordConfirm') \n            }\n        );\n        this.form_step3 = this.formBuilder.group({\n            name: ['', Validators.required],\n            width: ['', Validators.required],\n            height: ['', Validators.required],\n            skinColor: ['2', Validators.required],\n            genderType: ['1', Validators.required]\n        });\n    }\n\n    ngAfterViewInit() {\n    }\n\n    get form1() { return this.form_step1.controls; }\n    get form3() { return this.form_step3.controls; }\n\n    scroll(direction) {\n        if(direction == 'left') {\n            if(this.lastScrollSkin) {\n                this.lastScrollSkin = false;\n                this.skinPick.nativeElement.scrollLeft = this.skins.length*26;\n            }\n            let found = this.skinsReal.filter(o => o.id < this.skins[0].id);\n            if(this.skinsReal[0].id == this.skins[0].id) {\n                this.skinPick.nativeElement.scrollLeft = 100;\n                this.firstScrollSkin = true;\n            } else {\n                let removeValFromIndex = [13, 14, 15]; \n                for (var i = removeValFromIndex.length -1; i >= 0; i--) {\n                    this.skins.splice(removeValFromIndex[i],1);\n                }\n                for(let i = found.length-1; i >= found.length-3; i--) {\n                    this.skins.unshift(found[i]);\n                }\n            }\n        } else if(direction == 'right') {\n            if(this.firstScrollSkin) {\n                this.firstScrollSkin = false;\n                this.skinPick.nativeElement.scrollLeft = this.skins.length*26;\n            }\n            let found = this.skinsReal.filter(o => o.id > this.skins[this.skins.length - 1].id);\n            if(this.skinsReal[this.skinsReal.length-1].id == this.skins[this.skins.length - 1].id) {\n                this.skinPick.nativeElement.scrollLeft = this.skins.length*43;\n                this.lastScrollSkin = true;\n            } else {\n                let removeValFromIndex = [0, 1, 2]; \n                for (var i = removeValFromIndex.length -1; i >= 0; i--) {\n                    this.skins.splice(removeValFromIndex[i],1);\n                }\n\n                for(let i = 0; i < found.length; i++) {\n                    if(i <= 2)\n                        this.skins = this.skins.concat(found[i]);\n                }\n            }\n        }\n    }\n\n    putColor(option, event) {\n        const target = event.target || event.srcElement || event.currentTarget;\n        const other = document.querySelectorAll('.skinChoose');\n        other.forEach(function(item){\n            item.classList.remove('active');\n        });\n        target.classList.add('active');\n        if(option == 1) {\n            this.form3['skinColor'].setValue(option);\n        } else if(option == 2) {\n            this.form3['skinColor'].setValue(option);\n        }\n\n        this.initSkins();\n    }\n\n    putGender(option, event) {\n        const target = event.target || event.srcElement || event.currentTarget;\n        const other = document.querySelectorAll('.sexChoose');\n        const parent = target.parentNode;\n        other.forEach(function(item){\n            item.classList.remove('active');\n        });\n        if(parent.classList.contains('sexChoose')) {\n            parent.classList.add('active');\n        } else {\n            target.classList.add('active');\n        }\n        if(option == 1) {\n            this.form3['genderType'].setValue(option);\n        } else if(option == 2) {\n            this.form3['genderType'].setValue(option);\n        }\n\n        this.initSkins();\n    }\n\n    preview(files, event) {\n        if (files.length === 0)\n          return;\n\n        var mimeType = files[0].type;\n        if (mimeType.match(/image\\/*/) == null) {\n        this.message = \"Il faut une image.\";\n          return;\n        }\n\n        var reader = new FileReader();\n        this.imagePath = files;\n        reader.readAsDataURL(files[0]); \n        reader.onload = (_event) => { \n          this.imgURL = reader.result; \n        }\n        this.file = event.target.files[0];\n    }\n\n    setSkin(index, event) {\n        const target = event.target || event.srcElement || event.currentTarget;\n        const other = document.querySelectorAll('.skinWrap div');\n        other.forEach(function(item){\n            item.classList.remove('active');\n        });\n        target.parentNode.classList.add('active');\n        this.skinModel = this.skins[index].dff;\n        this.showModel.setModel(this.skinModel);\n    }\n\n    previous() {\n        if(this.step == 2){\n            this.account_step = false;\n            this.personnal_step = false;\n            this.step--;\n        }\n    }\n\n    next(){\n        if(this.step == 1){\n            this.account_step = true;\n            if (this.form_step1.invalid) { \n                return  \n            }\n            this.step++;\n            setTimeout(() => { this.showAvatar() }, 50);\n        } else if(this.step == 2) {\n            this.personnal_step = true;\n            if (this.form_step1.invalid) { \n                return  \n            }\n            this.showProposal = true;\n        }\n    }\n\n    showAvatar() {\n        this.svgAvatar = createAvatar(styleAvatar, {\n            seed: this.form_step1.get('username').value,\n            backgroundColor: '#e8e8e8',\n            radius: 50,\n            scale: 95\n        });\n    }\n\n    characterProposal(option) {\n        this.showProposal = false;\n        this.onSubmit(option);\n\n        if(option) {\n            this.step = 3;\n            this.initSkins();\n            this.loading = false;\n        }\n    }\n\n    initSkins() {\n        this.skins = [];\n        this.characterService.getSkins(this.form_step3.get('genderType').value+'0'+this.form_step3.get('skinColor').value)\n          .pipe(first())\n          .subscribe(skins => { \n            this.skinsReal = skins;\n            const skinsMiddleIndex = (Math.round((this.skinsReal.length - 1) / 2) - 7);\n            for (let i = skinsMiddleIndex-1; i < skinsMiddleIndex+15; i++) {\n                this.skins.push(this.skinsReal[i]);\n            }\n            const middle = Math.round((this.skins.length - 1) / 2);\n            this.skinModel = this.skins[middle].dff;\n            this.showModel.setModel(this.skinModel);\n            this.skinPick.nativeElement.scrollLeft = this.skins.length*26;\n          });\n    }\n\n    createCharacter() {\n        if (this.form_step3.invalid) {\n            return;\n        }\n        this.alertService.clear();\n\n        this.loading = true;\n        this.characterService.create(this.form_step3.value)\n            .pipe(first())\n            .subscribe({\n                next: () => {\n                    this.alertService.success('Votre personnage est créé', { keepAfterRouteChange: true });\n                    this.router.navigate(['../../'], { relativeTo: this.route });\n                },\n                error: error => {\n                    this.alertService.error(error);\n                    this.loading = false;\n                }\n            });\n    }\n\n    onSubmit(option=false) {\n        this.submitted = true;\n        this.alertService.clear();\n\n        if (this.form_step1.invalid) {\n            return;\n        }\n\n        this.loading = true;\n        this.accountService.register(this.form_step1.value)\n            .pipe(first())\n            .subscribe({\n                next: (user) => {\n                    this.FileUploadService.upload(this.file, user).subscribe({\n                        next: (event) => {\n                            if (typeof (event) === 'object') {\n                            }\n                        },\n                        error: error => {\n                            this.alertService.error(error);\n                            this.loading = false;\n                        }\n                    });\n\n                    if(!option) {\n                        this.alertService.success('Vous êtes inscrit avec succès', { keepAfterRouteChange: true });\n                        this.router.navigate(['../../'], { relativeTo: this.route });\n                    } else {\n                        this.loading = false;\n                    }\n                },\n                error: error => {\n                    this.alertService.error(error);\n                    this.loading = false;\n                }\n            });\n\n    }\n}\n","<div [ngClass]=\"{ 'CharacterShow': step == 3 }\" class=\"auth-wrap registerPage\">\n    <div *ngIf=\"step != 3\" class=\"register-info\">\n        <h2>Tout commence ici ...</h2>\n        <p>\n            Lorem ipsum dolor sit amet, consectetur adipiscing elit. Quisque imperdiet a lorem et elementum. Interdum et malesuada fames ac ante ipsum primis in faucibus. Nunc at scelerisque augue. Curabitur eros dolor, bibendum cursus turpis eget, rhoncus viverra enim. Nunc at congue nunc. Maecenas quis mattis felis, euismod congue est. Sed eget mauris vitae ipsum iaculis ullamcorper a sit amet sem. Ut eu mollis tortor, id scelerisque velit.\n\n            Duis quis mattis dolor. Curabitur euismod semper mauris, non vulputate nisi dapibus eu. Nunc commodo imperdiet consectetur. Nam ligula mi, aliquet at justo placerat, aliquam gravida est. Quisque eget nisl vel magna dictum viverra quis sit amet quam. Proin id posuere odio, quis auctor orci. Quisque nec molestie ligula. Ut non ligula nec nibh convallis eleifend. Proin tincidunt vulputate mauris, eu feugiat nulla dictum a. Phasellus porttitor tempus rutrum. Donec in sapien felis. Etiam eget consequat neque, sed efficitur nisi. Curabitur in orci quis tellus feugiat consectetur.\n        </p>\n    </div>\n    <div class=\"steps-register\">\n        <ol>\n            <li [ngClass]=\"{ 'active': step == 1, 'passed': step != 1 }\">\n                <span class=\"stepNumber\">1</span>\n                <b>Informations pour le compte</b>\n                <span>Faut faire les bases !</span>\n            </li>\n            <li [ngClass]=\"{ 'active': step == 2, 'passed': step != 2 && step != 1 }\">\n                <span class=\"stepNumber\">2</span>\n                <b>Informations personnelles</b>\n                <span>Et toi alors ? Dit nous plus !</span>\n            </li>\n            <li [ngClass]=\"{ 'active': step == 3 }\">\n                <span class=\"stepNumber\">3</span>\n                <b>Créer un personnage</b>\n                <span>C'est le labo des personnages !</span>\n            </li>\n        </ol>\n    </div>\n    <div [ngClass]=\"{ 'character': step == 3 }\" class=\"card registerCard\">\n        <h4 class=\"card-header\">S'inscrire <span>Vient décrouvrir notre monde !</span></h4>\n        <div *ngIf=\"step == 1\" class=\"card-body\">\n            <form [formGroup]=\"form_step1\" (ngSubmit)=\"next()\">\n                <div class=\"form-group\">\n                    <label for=\"username\">Nom d'utilistateur</label>\n                    <input type=\"text\" placeholder=\"Votre identifiant\" [ngClass]=\"{ 'is-invalid': account_step && form1.username.errors }\" formControlName=\"username\" />\n                    <div *ngIf=\"account_step && form1.username.errors\" class=\"invalid-feedback\">\n                        <ul>\n                            <li *ngIf=\"form1.username.errors.required\">Ce champ est obligatoire !\n                            </li>\n                        </ul>\n                    </div>\n                </div>\n                <div class=\"form-group\">\n                    <label for=\"email\">E-mail</label>\n                    <input type=\"text\" placeholder=\"Une adresse électronique\" [ngClass]=\"{ 'is-invalid': account_step && form1.email.errors }\" formControlName=\"email\" />\n                    <div *ngIf=\"account_step && form1.email.errors\" class=\"invalid-feedback\">\n                        <ul>\n                            <li *ngIf=\"form1.email.errors.required\">Ce champ est obligatoire !\n                            </li>\n                            <li *ngIf=\"form1.email.errors.email\">Ce champ n'a pas le bon format (Ex: email@email.com) !\n                            </li>\n                        </ul>\n                    </div>\n                </div>\n                <div class=\"form-group\">\n                    <div class=\"displayMultiple\">\n                        <div class=\"itemMultiple\">\n                            <label for=\"password\">Votre mot de passe</label>\n                            <input type=\"password\" placeholder=\"Une adresse électronique\" [ngClass]=\"{ 'is-invalid': account_step && form1.password.errors }\" formControlName=\"password\" />\n                        </div>\n                        <div class=\"itemMultiple\">\n                            <label for=\"passwordConfirm\">Confirmer votre mot de passe</label>\n                            <input type=\"password\" placeholder=\"Une adresse électronique\" [ngClass]=\"{ 'is-invalid': account_step && form1.passwordConfirm.errors }\" formControlName=\"passwordConfirm\" />\n                        </div>\n                    </div>\n                    <div *ngIf=\"account_step && (form1.password.errors || form1.passwordConfirm.errors)\" class=\"invalid-feedback\">\n                        <ul>\n                            <li *ngIf=\"form1.password.errors?.required\">Le champ du mot de passe est obligatoire</li>\n                            <li *ngIf=\"form1.passwordConfirm.errors?.required\">Vous devez confirmer votre mot de passe !</li>\n                            <li *ngIf=\"form1.passwordConfirm.errors?.mustMatch\">Le mot de passe et sa confirmation ne sont pas identique</li>\n                        </ul>\n                    </div>\n                </div>\n\n                <div class=\"form-group\">\n                    <button type=\"submit\" (click)=\"next()\">\n                        Suivant\n                    </button>\n                </div>\n            </form>\n        </div>\n\n        <div *ngIf=\"step == 2\" class=\"card-body\">\n            <form [formGroup]=\"form_step1\" (ngSubmit)=\"next()\">\n                <div class=\"form-group profile-pic\">\n                    <img *ngIf=\"!imgURL\" class=\"no-avatar\" src=\"./assets/img/design/no-avatar.png\">\n                    <img *ngIf=\"imgURL\" class=\"no-avatar\" [src]=\"imgURL\">\n                    <label for=\"file\" class=\"label-file\">Choisir une image de profille</label>\n                    <input #profilePicture id=\"file\" name=\"avatar\" formControlName=\"avatar\" class=\"input-file\" type=\"file\" accept='image/*' (change)=\"preview(profilePicture.files, $event)\">\n                    <div [innerHTML]=\"svgAvatar | safeHtml\" class=\"suggest-avatar\">\n                        <span>Vous pouvez toujours garder un avatar généré par defaut</span>\n                    </div>\n                </div>\n                <div class=\"form-group\">\n                    <label>Date de naissance</label>\n                    <div class=\"displayMultiple\">\n                        <div class=\"itemMultiple\">\n                            <label for=\"day\">Jour</label>\n                            <select formControlName=\"day\">\n                                <option value=\"12\" selected>12</option>\n                            </select>\n                        </div>\n                        <div class=\"itemMultiple\">\n                            <label for=\"month\">Mois</label>\n                            <select formControlName=\"month\">\n                                <option value=\"09\" selected>09</option>\n                            </select> \n                        </div>\n                        <div class=\"itemMultiple\">\n                            <label for=\"year\">Année</label>                   \n                            <select formControlName=\"year\">\n                                <option value=\"2021\" selected>2021</option>\n                            </select>\n                        </div>\n                    </div>\n                </div>\n                <div class=\"form-group\">\n                    <label for=\"signature\">Ajouter une signature</label>\n                    <textarea formControlName=\"signature\"></textarea>\n                </div>\n\n                <div class=\"form-group\">\n                    <div class=\"displayMultiple\">\n                        <div class=\"itemMultiple\">\n                            <button type=\"button\" (click)=\"previous()\" [disabled]=\"loading\">\n                                Précedent\n                            </button>\n                        </div>\n                        <div class=\"itemMultiple main\">\n                            <button type=\"submit\" (click)=\"next()\" [disabled]=\"loading\">\n                                <i *ngIf=\"loading\" class=\"fas fa-circle-notch fa-spin\"></i> Suivant\n                            </button>\n                        </div>\n                    </div>\n                </div>\n            </form>\n        </div>\n\n        <div *ngIf=\"step == 3\" class=\"card-body\">\n            <form [formGroup]=\"form_step3\" (ngSubmit)=\"next()\">\n                <div class=\"form-group\">\n                    <label for=\"name\">Nom et Prénom de votre personnage</label>\n                    <input type=\"text\" placeholder=\"Votre Prénom Nom\" [ngClass]=\"{ 'is-invalid': character_step && form3.name.errors }\" formControlName=\"name\" />\n                    <p>\n                        * Format de ce champ doit être Prénom_Nom (ex: John_Doe)\n                    </p>\n                    <div *ngIf=\"character_step && form3.name.errors\" class=\"invalid-feedback\">\n                        <ul>\n                            <li *ngIf=\"form3.name.errors.required\">Ce champ est obligatoire !\n                            </li>\n                        </ul>\n                    </div>\n                </div>\n                <div class=\"form-group\">\n                    <label for=\"username\">Aspect morphologique</label>\n                    <div class=\"displayMultiple genderWidth\">\n                        <div class=\"itemMultiple\">\n                            <label for=\"height\">Taille</label><br>\n                            <input type=\"text\" placeholder=\"1m80\" formControlName=\"height\">\n                            <p>\n                                * Format de champ doit être uniquement la taille en mètre suivit de \"m\" puis les centimetres (Ex: 1m80)\n                            </p>\n                        </div>\n                        <div class=\"itemMultiple\">\n                            <label for=\"width\">Poids</label><br>\n                            <input type=\"text\" style=\"width: 50%\" placeholder=\"80\" formControlName=\"width\"> Kg\n                            <p>\n                                * Format de ce champ doit être juste le poids, ce champ doit être uniquement chiffré (Ex: pas de 80\"Kg\" juste 80)\n                            </p>\n                        </div>\n                    </div>\n                    <div *ngIf=\"character_step && (form3.width.errors || form3.height.errors)\" class=\"invalid-feedback\">\n                        <ul>\n                            <li *ngIf=\"form3.width.errors.required\">Vous devez indiquer le poids de votre personnage !\n                            </li>\n                            <li *ngIf=\"form3.height.errors.required\">Vous devez indiquer la taille de votre personnage !\n                            </li>\n                        </ul>\n                    </div>\n                </div>\n                <div class=\"form-group\">\n                    <label for=\"username\">Aspect physique</label>\n                    <div class=\"displayMultiple genderWidth\">\n                        <div class=\"itemMultiple\">\n                            <label for=\"skinColor\">Couleur de peau</label><br>\n                            <input type=\"hidden\" id=\"color\" [value]=\"2\" formControlName=\"skinColor\">\n                            <div (click)=\"putColor(1, $event)\" class=\"circleChoose skinChoose white\">\n                            </div>\n                            <div (click)=\"putColor(2, $event)\" class=\"circleChoose skinChoose black active\">\n                            </div>\n                        </div>\n                        <div class=\"itemMultiple\">\n                            <label for=\"genderType\">Genre du personnage</label><br>\n                            <input type=\"hidden\" id=\"gender\" [value]=\"1\" formControlName=\"genderType\">\n                            <div (click)=\"putGender(1, $event)\" class=\"circleChoose sexChoose men active\">\n                                <i class=\"fas fa-mars\"></i> <span class=\"circleText\">Homme</span>\n                            </div>\n                            <div (click)=\"putGender(2, $event)\" class=\"circleChoose sexChoose women\">\n                                <i class=\"fas fa-venus\"></i> <span class=\"circleText\">Femme</span>\n                            </div>\n                        </div>\n                    </div>\n                </div>\n                <div class=\"form-group button\">\n                    <button type=\"button\" (click)=\"createCharacter()\">\n                        <i *ngIf=\"loading\" class=\"fas fa-circle-notch fa-spin\"></i> Créer mon compte\n                    </button>\n                </div>\n            </form>\n        </div>\n    </div>\n</div>\n<div *ngIf=\"showProposal\" class=\"modal big\">\n    <h3>Voulez-vous créer un personnage maintenant ?</h3>\n    <button (click)=\"characterProposal(true)\">Oui</button> <button (click)=\"characterProposal(false)\">Non</button>\n</div>\n<div *ngIf=\"step == 3\" class=\"skinPick\">\n    <div class=\"scroll left\">\n        <i (click)=\"scroll('left')\" class=\"fas fa-arrow-left\"></i>\n    </div>\n    <div class=\"scroll right\">\n        <i (click)=\"scroll('right')\" class=\"fas fa-arrow-right\"></i>\n    </div>\n    <div #skinPick class=\"scrollSkin\">\n        <div class=\"skinArea\">\n            <div *ngFor=\"let skin of skins; let i = index;\" class=\"skinWrap\">\n                <div (click)=\"setSkin(i, $event)\" [ngStyle]=\"{'margin-top': (lastScrollSkin) ? (i >= 9) ? '-49px' : (i < 3) ? '0px' : (i > 12) ? '0px' : (i <= 7) ? '-'+i*7+'px' : (i >= 8) ? '-'+((10-i)+5)*7+'px' : '0px' : (firstScrollSkin) ? (i <= 6) ? '-49px' : (i < 3) ? '0px' : (i > 12) ? '0px' : (i <= 7) ? '-'+i*7+'px' : (i >= 8) ? '-'+((10-i)+5)*7+'px' : '0px' : (i < 3) ? '0px' : (i > 12) ? '0px' : (i <= 7) ? '-'+i*7+'px' : (i >= 8) ? '-'+((10-i)+5)*7+'px' : '0px', 'opacity': (lastScrollSkin) ? (i > 12) ? '1' : '1' : (firstScrollSkin) ? (i < 3) ? '1' : '1' : (i < 3) ? '0.3' : (i >12) ? '0.3' : '1'}\"class=\"skinShadow\">\n                    <img src=\"./assets/img/skin/1/{{skin.skinid}}.png\">\n                    <img class=\"shadow\" src=\"./assets/img/skin/1/{{skin.skinid}}.png\">\n                </div>\n            </div>\n        </div>\n    </div>\n</div>\n<app-web-gl *ngIf=\"step == 3\" [skinModel]=\"skinModel\" models=\"skins\"></app-web-gl>","import { Component, OnInit, ViewEncapsulation } from '@angular/core';\nimport { Router } from '@angular/router';\n\nimport { AccountService } from '../../_services';\n\n@Component({ \n    templateUrl: 'auth.component.html',\n    styleUrls: ['./auth.component.less'],\n    encapsulation: ViewEncapsulation.None\n})\nexport class Authcomponent implements OnInit {\n    constructor(\n        public router: Router,\n        private accountService: AccountService\n    ) {\n        // redirect to home if already logged in\n        if (this.accountService.userValue) {\n            //this.router.navigate(['/']);\n        }\n    }\n\n    ngOnInit(): void {\n    }\n}","<router-outlet></router-outlet>","import { NgModule } from '@angular/core';\r\nimport { ReactiveFormsModule, FormsModule } from '@angular/forms';\r\nimport { CommonModule } from '@angular/common';\r\n\r\nimport { AuthRoutingModule } from './auth-routing.module';\r\nimport { Authcomponent } from './auth.component';\r\nimport { LoginComponent } from './login/login.component';\r\nimport { RegisterComponent } from './register/register.component';\r\nimport { ValidationComponent } from './validation/validation.component';\r\n\r\nimport { sharedModule } from '../../shared.module';\r\n\r\n\r\n@NgModule({\r\n    imports: [\r\n        CommonModule,\r\n        ReactiveFormsModule,\r\n        AuthRoutingModule,\r\n        sharedModule,\r\n        FormsModule\r\n    ],\r\n    declarations: [\r\n        Authcomponent,\r\n        LoginComponent,\r\n        RegisterComponent,\r\n        ValidationComponent\r\n    ]\r\n})\r\nexport class AuthModule { }","import { Component, OnInit } from '@angular/core';\nimport { Router, ActivatedRoute } from '@angular/router';\nimport { FormBuilder, FormGroup, Validators } from '@angular/forms';\nimport { first } from 'rxjs/operators';\n\nimport { AccountService, AlertService } from '../../../_services';\n\n@Component({ templateUrl: 'login.component.html' })\nexport class LoginComponent implements OnInit {\n    form: FormGroup;\n    loading = false;\n    submitted = false;\n\n    constructor(\n        private formBuilder: FormBuilder,\n        private route: ActivatedRoute,\n        private router: Router,\n        private accountService: AccountService,\n        private alertService: AlertService\n    ) { }\n\n    ngOnInit() {\n        this.form = this.formBuilder.group({\n            username: ['', Validators.required],\n            password: ['', Validators.required]\n        });\n    }\n\n    // convenience getter for easy access to form fields\n    get f() { return this.form.controls; }\n\n    onSubmit() {\n        this.submitted = true;\n\n        // reset alerts on submit\n        this.alertService.clear();\n\n        // stop here if form is invalid\n        if (this.form.invalid) {\n            return;\n        }\n\n        this.loading = true;\n        this.accountService.login(this.f.username.value, this.f.password.value)\n            .pipe(first())\n            .subscribe({\n                next: () => {\n                    this.alertService.success('Vous êtes connecté !', { keepAfterRouteChange: true, autoClose: true });\n                    // get return url from query parameters or default to home page\n                    const returnUrl = this.route.snapshot.queryParams['returnUrl'] || '/';\n                    this.router.navigateByUrl(returnUrl);\n                },\n                error: error => {\n                    this.alertService.error(error, {autoClose: true});\n                    this.loading = false;\n                }\n            });\n    }\n}","<div class=\"auth-wrap loginPage\">\n<div class=\"card\">\n    <h4 class=\"card-header\">\n        Se connecter <span>Encore beaucoup à découvrir !</span>\n        <span class=\"check-register\">Vous n'avez pas de compte ? Vous pouvez vous <a routerLink=\"../register\" class=\"btn btn-link\">inscrire</a></span>\n    </h4>\n    <div class=\"card-body\">\n        <form [formGroup]=\"form\" (ngSubmit)=\"onSubmit()\">\n            <div class=\"form-group\">\n                <label for=\"username\">Nom d'utilistateur ou e-mail</label>\n                <input type=\"text\" placeholder=\"Votre identifiant\" formControlName=\"username\" class=\"form-control\" [ngClass]=\"{ 'is-invalid': submitted && f.username.errors }\" />\n                <div *ngIf=\"submitted && f.username.errors\" class=\"invalid-feedback\">\n                    <div *ngIf=\"f.username.errors.required\">Username is required</div>\n                </div>\n            </div>\n            <div class=\"form-group\">\n                <label for=\"password\">Mot de passe</label>\n                <input type=\"password\" placeholder=\"●●●●●●●●●●●●●●●●●●●\" formControlName=\"password\" class=\"form-control\" [ngClass]=\"{ 'is-invalid': submitted && f.password.errors }\" />\n                <a class=\"linkPass_rec\" href=\"#\">Mot de passe oublié</a>\n                <div *ngIf=\"submitted && f.password.errors\" class=\"invalid-feedback\">\n                    <div *ngIf=\"f.password.errors.required\">Password is required</div>\n                </div>\n            </div>\n            <div class=\"form-group\">\n                <button>\n                    <i *ngIf=\"loading\" class=\"fas fa-circle-notch fa-spin\"></i>\n                    Connexion\n                </button>\n            </div>\n        </form>\n    </div>\n</div>\n</div>","import { FormGroup } from '@angular/forms';\r\n\r\n// custom validator to check that two fields match\r\nexport function MustMatch(controlName: string, matchingControlName: string) {\r\n    return (formGroup: FormGroup) => {\r\n        const control = formGroup.controls[controlName];\r\n        const matchingControl = formGroup.controls[matchingControlName];\r\n\r\n        if (matchingControl.errors && !matchingControl.errors.mustMatch) {\r\n            // return if another validator has already found an error on the matchingControl\r\n            return;\r\n        }\r\n\r\n        // set error on matchingControl if validation fails\r\n        if (control.value !== matchingControl.value) {\r\n            matchingControl.setErrors({ mustMatch: true });\r\n        } else {\r\n            matchingControl.setErrors(null);\r\n        }\r\n    }\r\n}","import { Component, OnInit } from '@angular/core';\nimport { Router, ActivatedRoute } from '@angular/router';\nimport { trigger, transition, style, animate, state } from '@angular/animations';\nimport { FormBuilder, FormGroup, Validators } from '@angular/forms';\nimport { first } from 'rxjs/operators';\n\nimport { AccountService, AlertService, ValidationService } from '../../../_services';\n\n@Component({ \n    templateUrl: 'validation.component.html',\n    animations: [\n        trigger('slideInOut', [\n          transition(':enter', [\n            style({ transform: 'translateX(100%)' }),\n            animate('.2s', style({ transform: 'translateX(0%)' }))\n          ]),\n          transition(':leave', [\n            style({ transform: 'translateX(0%)' }),\n            animate('.2s', style({ transform: 'translateX(100%)' }))\n          ])\n        ])\n    ]\n})\nexport class ValidationComponent implements OnInit {\n    section = 2;\n    step = 0;\n    radioSelected: number = 0;\n    questions = null;\n    application = null;\n    errors = 0;\n    loading = [false, false, false];\n    field = ['', '', ''];\n    field_storage = localStorage.getItem('field');\n    app_storage = localStorage.getItem('application');\n    getPercent = 5;\n    test = '';\n    constructor(\n        private formBuilder: FormBuilder,\n        private route: ActivatedRoute,\n        private router: Router,\n        private accountService: AccountService,\n        private alertService: AlertService,\n        private validationService: ValidationService\n    ) { \n        if(this.field_storage) {\n            const getFields = JSON.parse(this.field_storage);\n            this.field = [getFields[0], getFields[1], getFields[2]];\n        }\n    }\n\n    ngOnInit() {\n      this.validationService.getApplication()\n        .pipe(first())\n        .subscribe(application => {\n            if(!this.field_storage) {\n                this.application = application;\n                localStorage.setItem('application', JSON.stringify(this.application));\n            } else {\n                this.application = JSON.parse(this.app_storage);\n            }\n        });\n\n      this.validationService.getQuestions()\n        .pipe(first())\n        .subscribe(questions => { \n            this.questions = questions;\n        });\n    }\n\n    onSelectQuestion(answer, event) {\n        this.loading[answer] = true;\n        const target = event.target || event.srcElement || event.currentTarget;\n        const other = document.querySelectorAll('label.question');\n        const parent = target.parentNode;\n        other.forEach(function(item){\n                item.classList.remove('active');\n                item.classList.remove('error');\n        });\n        target.classList.add('active');\n        this.validationService.checkQuestion(this.questions[this.step].id, answer)\n            .pipe(first())\n            .subscribe({\n                next: (check) => {\n                    setTimeout(() => {\n                        target.classList.remove('active');\n                        target.classList.remove('success');\n                        this.step = this.step+1;\n                        if(this.step == 6) {\n                            this.section = this.section+1;\n                            this.step = 0;\n                            this.getPercent = 5;\n                        }\n                    }, 1000);\n                    this.getPercent = (100 * (this.step+1)) / 6;\n                    target.classList.add('success');\n                    this.loading[answer] = false;\n                },\n                error: error => {\n                    setTimeout(() => { \n                        target.classList.remove('active');\n                        target.classList.remove('error'); \n                    }, 1000);\n                    target.classList.add('error');\n                    this.errors = this.errors+1;\n                    this.loading[answer] = false;\n                }\n            });\n    }\n\n    previousApp() {\n        if(this.step > 0) {\n            this.step = this.step-1;\n            this.getPercent = (100 * (this.step)) / 3;\n        }\n    }\n\n    nextApp() {\n        if(this.step < 2) {\n            if(this.field[this.step].length < 100) {\n                this.alertService.info('Il vous faut un minimum de 100 caractères', { autoClose: true });\n            } else {\n                this.step = this.step+1;\n                this.getPercent = (100 * (this.step)) / 3;\n            }\n        } else {\n            this.loading[0] = true;\n            const params = {\n                response1: this.field[0],\n                response2: this.field[1],\n                response3: this.field[2],\n                case1: this.application[0].id,\n                case2: this.application[1].id,\n                case3: this.application[2].id,\n                errors: this.errors\n            }\n            this.validationService.sendValidation(params)\n                .pipe(first())\n                .subscribe({\n                    next: (validation) => {\n                        localStorage.removeItem('field');\n                        localStorage.removeItem('application');\n                        this.getPercent = 100;\n                        this.section = this.section+1;\n                        this.loading[0] = false;\n                    },\n                    error: error => {\n                        this.alertService.error(error, { autoClose: true });\n                        this.loading[0] = false;\n                    }\n                });\n        }\n    }\n\n    saveField() {\n        localStorage.setItem('field', JSON.stringify(this.field));\n    }\n}","<div class=\"auth-wrap validationPage\">\n<div class=\"card validation\">\n    <h4 class=\"card-header\">\n        <span class=\"sub-section\">\n            Validation de compte\n            <b *ngIf=\"section == 1\">Questionnaire (1/2)</b>\n            <b *ngIf=\"section == 2\" [@slideInOut]>Candidature (2/2)</b>\n        </span>\n        <span *ngIf=\"section == 1\" class=\"step\"><b>{{step+1}}</b>/6</span>\n        <span *ngIf=\"section == 2\" [@slideInOut] class=\"step\"><b>{{step+1}}</b>/3</span>\n    </h4>\n    <div *ngIf=\"section == 1\" [@slideInOut] class=\"card-body\">\n        <form>\n            <label>{{questions[step]?.question}}</label>\n            <label class=\"question\" (click)=\"onSelectQuestion(1, $event)\">\n                <i class=\"fas fa-angle-double-right\"></i> \n                {{questions[step]?.response1}}\n                <i *ngIf=\"loading[1]\" class=\"fas fa-circle-notch fa-spin\"></i>\n            </label>\n            <label class=\"question\" (click)=\"onSelectQuestion(2, $event)\">\n                <i class=\"fas fa-angle-double-right\"></i> \n                {{questions[step]?.response2}} \n                <i *ngIf=\"loading[2]\" class=\"fas fa-circle-notch fa-spin\"></i>\n            </label>\n            <label class=\"question\" (click)=\"onSelectQuestion(3, $event)\">\n                <i class=\"fas fa-angle-double-right\"></i>\n                {{questions[step]?.response3}}\n                <i *ngIf=\"loading[3]\" class=\"fas fa-circle-notch fa-spin\"></i>\n            </label>\n        </form>\n        <p>Remarque :</p>\n        <p>* Ce processus ne vous sera demandé qu'une seule fois pour verifier votre motivation et surtout votre maîtrise du \"roleplay\". </p>   \n    </div>\n    <div *ngIf=\"section == 2\" [@slideInOut] class=\"card-body\">\n        <form>\n            <label>{{application[step]?.field}} </label>\n            <textarea [(ngModel)]=\"field[step]\" name=\"field\" (keyup)=\"saveField()\"></textarea>\n            <button *ngIf=\"step > 0\" class=\"prev\" (click)=\"previousApp()\">Précedent</button><button *ngIf=\"step < 2\" (click)=\"nextApp()\" class=\"next\">Suivant</button>\n            <button *ngIf=\"step == 2\" (click)=\"nextApp()\">\n                <i *ngIf=\"loading[0]\" class=\"fas fa-circle-notch fa-spin\"></i>\n                Envoyer la demande\n            </button>\n        </form>\n        <p>Remarque :<p>\n        <p>* Ce processus ne vous sera demandé qu'une seule fois pour verifier votre motivation et surtout votre maîtrise du \"roleplay\". </p>\n        <p>* Tout ce que vous saisiez dans ces champs pourra toujours être consultés après la fermeture de l'onglet, cette section a une sauvegard automatique de la saisie.</p>\n    </div>\n    <div *ngIf=\"section == 3\" [@slideInOut] class=\"card-body final\">\n        <h3>Votre aventure chez nous</h3>\n        <p>\n            Vous venez d'ouvrir la première porte pour notre univers. Nous sommes conscients que des fois l'attente peut être difficile à contenir. Néanmoins cette étape est non négligeable pour assurer une qualité de jeu à la hauteur de vos attentes.<br>\n            Votre demande de validation de compte est reçue en instantané par notre équipe de staff, ceci sur le site, mais aussi sur discord pour assurer une optimisation express de la prise en charge de chaque candidature.<br>\n            <b>Cordialement et avec ♥ de la part de toute l'équipe de staff.</b>\n        </p>\n    </div>\n    <div class=\"progressBar\">\n        <div class=\"progressBar progress\" [style.width.%]=\"getPercent\">\n        </div>\n    </div>\n</div>\n</div>"],"sourceRoot":"webpack:///"}